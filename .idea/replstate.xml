<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1409509971773">{:repl-history {:ide [], :local [&quot;(+ 1 2 3)&quot; &quot;(-&gt; @(http/get \&quot;http://ya.ru\&quot;)\n    (print))&quot; &quot;(-&gt; @(http/get \&quot;http://ya.ru\&quot;)\n    (:body)\n    (print))&quot; &quot;(-&gt; @(http/get \&quot;http://ya.ru\&quot;)\n    (:body)\n    (html/html-snippet)\n    (print))&quot; &quot;(-&gt; @(http/get \&quot;http://ru.m.wikipedia.oeg/wiki/SAP\&quot;)\n    (:body)\n    (html/html-snippet)\n    (print))&quot; &quot;(-&gt; @(http/get \&quot;http://ru.m.wikipedia.org/wiki/SAP\&quot;)\n    (:body)\n    (html/html-snippet)\n    (print))&quot; &quot;(-&gt; (html/html-content url)\n    (print))&quot; &quot;(-&gt; (html/html-resource url)\n    (print))&quot; &quot;(-&gt; @(http/get urk)\n    (:body)\n    (html/html-resource)\n    \n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-resource)\n    \n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-resource)\n    (html/select [:div.content])\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content])\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    (:attrs)\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    ;(:attrs)\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    (map :attrs %)\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    (map :attrs)\n    (print))&quot; &quot;(-&gt; @(http/get url)\n    (:body)\n    (html/html-snippet)\n    (html/select [:div.content :a])\n    #(map :attrs %)\n    (print))&quot; &quot;(+ 1 2\n   )&quot; &quot;(ns wiki-path.core\n  (:require [org.httpkit.client :as http]\n            [net.cgrand.enlive-html :as html]))&quot; &quot;(def url \&quot;http://ru.m.wikipedia.org/wiki/SAP\&quot;)&quot; &quot;(def html-page\n  (html/html-snippet\n    (:body @(http/get url))))&quot; &quot;html-page&quot; &quot;(map :attrs (html/select [:div.content :a]))&quot; &quot;(map :attrs (html/select html-page [:div.content :a]))&quot; &quot;(map (juxt :attrs :href) (html/select html-page [:div.content :a]))&quot; &quot;(map (comp :attrs :href) (html/select html-page [:div.content :a]))&quot; &quot;(map (comp :href :attrs) (html/select html-page [:div.content :a]))&quot; &quot;(def raw-links\n  (map (comp :href :attrs) (html/select html-page [:div.content :a])))&quot; &quot;(defn link-pred [link]\n  (and (= \&quot;/wiki/\&quot; (subs link 0 5))\n       ()))&quot; &quot;(defn link-pred [link]\n  (and (= \&quot;/wiki/\&quot; (subs link 0 5))\n       (not (some #(= \\. %) link))))&quot; &quot;(link-pred \&quot;/wiki/lol\&quot;)&quot; &quot;(link-pred \&quot;/wiki/lol.pl\&quot;)&quot; &quot;(= \&quot;/wiki/\&quot; (subs \&quot;/wiki/lol\&quot; 0 5))&quot; &quot;(= \&quot;/wiki/\&quot; (subs \&quot;/wiki/lol\&quot; 1 6))&quot; &quot;(subs \&quot;/wiki/lol\&quot; 0 5)&quot; &quot;(filter link-pred raw-links)&quot; &quot;(count (filter link-pred raw-links))&quot; &quot;(defn link-pred [link]\n  (and (= \&quot;/wiki/\&quot; (subs link 0 6))\n       (not (some #(= \\. %) link))))&quot; &quot;(def links \n  (filter link-pred raw-links))&quot; &quot;links&quot; &quot;(def title\n  (html/select html-page [:h1#section_0]))&quot; &quot;(def title\n  (:content (html/select html-page [:h1#section_0])))&quot; &quot;(html/select html-page [:h1#section_0])&quot; &quot;(:content (html/select html-page [:h1#section_0])) &quot; &quot;(get (html/select html-page [:h1#section_0]) :content) &quot; &quot;(type (html/select html-page [:h1#section_0]))&quot; &quot;(first (html/select html-page [:h1#section_0]))&quot; &quot;(def title\n  (:content (first (html/select html-page [:h1#section_0]))))&quot; &quot;(def raw-links\n  (first (map (comp :href :attrs) (html/select html-page [:div.content :a]))))&quot; &quot;(def title\n  (first (:content (first (html/select html-page [:h1#section_0])))))&quot; &quot;title&quot;], :remote []}}</component>
</project>

